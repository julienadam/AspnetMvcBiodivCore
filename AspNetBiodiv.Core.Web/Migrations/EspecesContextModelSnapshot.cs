// <auto-generated />
using System;
using AspNetBiodiv.Core.Web.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetBiodiv.Core.Web.Migrations
{
    [DbContext(typeof(EspecesContext))]
    partial class EspecesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetBiodiv.Core.Web.Entities.Espece", b =>
                {
                    b.Property<int>("EspeceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspeceId"));

                    b.Property<int>("Habitat")
                        .HasColumnType("int");

                    b.Property<int>("IdInpn")
                        .HasColumnType("int");

                    b.Property<string>("NomScientifique")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PresenceEnMetropole")
                        .HasColumnType("int");

                    b.HasKey("EspeceId");

                    b.HasIndex("NomScientifique")
                        .IsUnique();

                    b.ToTable("Especes");
                });

            modelBuilder.Entity("AspNetBiodiv.Core.Web.Entities.Observation", b =>
                {
                    b.Property<int>("ObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObservationId"));

                    b.Property<string>("Commentaires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailObservateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspeceObserveeEspeceId")
                        .HasColumnType("int");

                    b.Property<int?>("Individus")
                        .HasColumnType("int");

                    b.Property<string>("NomCommune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ObservedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ObservationId");

                    b.HasIndex("EspeceObserveeEspeceId");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("AspNetBiodiv.Core.Web.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TagId");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("EspeceTag", b =>
                {
                    b.Property<int>("EspecesEspeceId")
                        .HasColumnType("int");

                    b.Property<int>("TagsTagId")
                        .HasColumnType("int");

                    b.HasKey("EspecesEspeceId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("EspeceTag");
                });

            modelBuilder.Entity("AspNetBiodiv.Core.Web.Entities.Observation", b =>
                {
                    b.HasOne("AspNetBiodiv.Core.Web.Entities.Espece", "EspeceObservee")
                        .WithMany()
                        .HasForeignKey("EspeceObserveeEspeceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EspeceObservee");
                });

            modelBuilder.Entity("EspeceTag", b =>
                {
                    b.HasOne("AspNetBiodiv.Core.Web.Entities.Espece", null)
                        .WithMany()
                        .HasForeignKey("EspecesEspeceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNetBiodiv.Core.Web.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
        }
    }
}
